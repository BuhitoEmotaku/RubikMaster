{
  "config": {
    "crossColors": [
      "白色",
      "橙色",
      "蓝色",
      "红色",
      "绿色",
      "黄色"
    ]
  },
  "components": {
    "topBanner": {
      "sloganRubikMaster": "~ 相信自己，你就能成功！ ~"
    },
    "routes": {
      "routesList": [
        "首页 / 算法",
        "CsTimer",
        "学习魔方"
      ]
    },
    "algsTypes": {
      "numCases": "算例数",
      "infoTypesList": {
        "f2l": {
          "description": "First Two Layers：解决魔方顶层之前的前两层的方法。",
          "cases": 42
        },
        "oll": {
          "description": "Orientation of the Last Layer：解决魔方顶层边缘的方法。",
          "cases": 57
        },
        "pll": {
          "description": "Permutation of the Last Layer：解决魔方顶层边缘和角的方法。",
          "cases": 21
        },
        "coll": {
          "description": "Corners of the Last Layer：解决魔方顶层角的方法。",
          "cases": 40
        },
        "zbll": {
          "description": "Zborowski-Bruchem Last Layer：一步解决魔方顶层的高级方法。",
          "cases": 501
        },
        "f2lA": {
          "description": "F2L高级：从不同角度解决F2L配对的最佳技巧。",
          "cases": "?"
        },
        "rnIn": {
          "description": "随机插入：从不同角度插入配对、零件、边缘等的最佳技巧。",
          "cases": "?"
        },        
        "cls": {
          "description": "Corners Last Slot：解决魔方最后一层最后一个角的方法和顶层的方法。",
          "cases": 32
        }
      }
    }
  },
  "views": {
    "homePage": {
      "ojectiveWeb": "该网站旨在为您提供一些工具，帮助您成为真正的魔方大师。",
      "welcomeTitle": "欢迎来到魔方大师！",
      "whoAmI": {
        "content": [
          "我的名字是",
          "我是一名半职业速拧者。",
          "我从2015年开始竞赛，经历了一些起伏，现在我的整体成绩在10秒以下（3x3）的水平。"
        ]
      },
      "whyRubikMaster": {
        "title": "为什么创建魔方大师？",
        "content": [
          "我创建魔方大师是为了更方便地检查我需要学习的所有算法（我认为最好的算法）。",
          "我也认为这可能会帮助更多的人，所以我将其公开给了大家！"
        ]
      },
      "thanksTo": {
        "title": "这个网页的可能性归功于：",
        "content": [
          "CubingJS",
          "SpeedCubeDB",
          "VisualCube",
          "csTimer"
        ]
      },
      "enjoyBuhito": "享受"
    },
    "algsDataView": {
      "statsTitle": "统计",
      "bestSolutionTitle": "最佳解决方案：",
      "secondaryAlgsTitle": "次要算法：",
      "notSecondaryAlgs": "没有可用的次要算法。",
      "numMovesTitle": "移动次数：",
      "crossColorTitle": "十字颜色"
    },
    "learnRubiksCube": {
      "learnIntroduction": {
        "solveRubikTitle": "如何解决魔方！",
        "introText": "在我们开始之前，我想明确一点，解决魔方是简单的，只要你愿意尽力！",
        "tutorialsLinkDescription": "如果您想通过教程学习，这里有我的教程！",
        "videosYTDescription": "YouTube上的完整列表",
        "moveTwistVisual": "可视化工具可以通过手指或鼠标移动以更好地查看魔方的各个部分",
        "timeDuration": "预计时间：2小时"
      },
      "part1": {
        "title": "步骤1：单色十字（在这种情况下为黄色面）",
        "warning": "仅关注边缘",
        "objective": "当我们拿起魔方时，首先要做的事情是制作一个单色十字。",
        "content": [
          "因此，我们任何时候都不会关注角落，只关注边缘。",
          "我们有两种可能的技巧：",
          "技巧1：",
          "直觉地创建十字。",
          "然后，使用以下“算法”将每个十字的部件放置到正确的位置：",
          "在这种情况下，如您所见，我将绿色部件更换为红色部件，使两者都处于正确位置。",
          "技巧2：",
          "我们将黄色朝下放置，并在顶部寻找具有黄色的边缘。",
          "为了知道每个面的颜色，我们将看每种颜色的中心。",
          "现在我们将找到2种情况：",
          "直接情况：",
          "非直接情况：",
          "我们可以将此技巧用于形成十字的所有4个边缘，以便正确放置它们。"
        ]
      },
      "part2": {
        "title": "步骤2：黄色角落",
        "warning": "仅关注角落",
        "objective": "完成十字后，将黄色面（底部）的角落放置到正确位置。",
        "content": [
          "为此，我们必须寻找一个角落，在魔方顶部含有黄色。",
          "找到后，我们将移动顶层以将其放置在其所属的列顶部。",
          "接下来，我们将在前面以右侧的部件位置。",
          "然后我们将应用以下算法，直到角落的黄色朝下：",
          "例如，我们将必须应用它3次：",
          "正如我们所看到的，此算法将将要放置的角落下降到其位置，并因此将已经在那里的角落上升到顶部。",
          "我们必须记住这一点，因为任何时候如果顶部没有角落，我们都必须使用相同的算法将它们升上来。"
        ]
      },
      "part3": {
        "title": "步骤3：第二层",
        "warning": "仅关注边缘",
        "objective": "通过将其4个边缘放置到正确位置来完成第二层。",
        "content": [
          "为此，我们必须在魔方顶部找到一个属于魔方第二层的4个边缘之一（共有4个）。",
          "（提示：它们不包含白色或黄色）",
          "找到后，我们将移动顶层直到部件的前面颜色与其颜色的中心匹配。",
          "我们将在这种情况下将红色与红色放置，例如",
          "然后我们将遇到2种情况：",
          "左侧插入：",
          "右侧插入：",
          "如果顶部位置没有边缘，我们将应用其中一个算法并找到一个。",
          "请记住，任何插入部件的算法都会移除已经存在的部件！",
          "我们将重复这个步骤直到所有需要的边缘都放置正确。"
        ]
      },
      "part4": {
        "title": "步骤4：选择与所选面相对的颜色十字",
        "warning": "仅关注边缘",
        "objective": "在顶层形成白色十字。",
        "content": [
          "这一步非常简单，因为我们总是会遇到3种情况之一。",
          "请记住，现在我们只需要关注顶层指向上的边缘，角落不管它们如何。",
          "三角形情况：",
          "要执行此情况，我们将需要将三角形放置在左上方并执行以下操作：",
          "首先，我们将白色边缘形成的白色三角形放置在左上角。",
          "我们应用以下算法：",
          "点情况：",
          "要解决此情况，我们将需要执行以下操作 ->",
          "线条情况：",
          "要执行此情况，我们将需要水平放置线条：",
          "我们应用以下算法：",
          "完成任何这些情况后，我们将得到一个白色十字。",
          "如果幸运地已经完成，我们将无需做任何事情。"
        ]
      },
      "part5": {
        "title": "步骤5：角落方向",
        "warning": "仅关注角落",
        "objective": "使白色角落方向正确，以完成整个面。",
        "content": [
          "为此，我们将把魔方颠倒过来，将白色面放在底部，黄色面朝上",
          "接下来，我们必须寻找一个底部未定向的白色角落。",
          "为此，我们将移动底层直到在右下角留下一个未定向的部件。",
          "在这种情况下，我们已经有一个正确定向的部件，所以我们移动底部直到找到一个错误的部件，",
          "现在我们按照这种方式进行定向，使用：上，左，下，右，直到放置完成。",
          "在这种情况下，我这样做了4次。",
          "一旦黄色部件朝下，我们将移动底部部分以继续寻找其他未定向的部件。",
          "一旦我们找到另一个，并且像之前一样将其放置到右下方，我们将使用与上一次相同的算法（上，左，下，右，直到放置完成）",
          "我们将重复这个步骤直到所有未定向的角落完成。",
          "具有多个角落的完整示例："
        ]
      },
      "part6": {
        "title": "步骤6：角落置换",
        "warning": "仅关注角落",
        "objective": "置换最后一层的角落。",
        "content": [
          "对于此步骤，我们必须将白色面向上，并在顶部寻找具有相同颜色的两个角落的面。",
          "找到后，我们将其放置在左侧",
          "这个面有两个相同颜色的橙色角落。我们将它们移到左侧：",
          "然后我们执行以下算法：",
          "如果我们找不到任何具有相同颜色的两个角落的面，我们执行相同的算法，将出现一个具有相同颜色的两个角落的面。",
          "（我们将其放置在左侧并重复算法）"
        ]
      },
      "part7": {
        "title": "步骤7：边缘置换",
        "warning": "仅关注边缘",
        "objective": "置换最后一层的边缘。",
        "content": [
          "最后，为了完成魔方，我们将寻找一个完整的具有相同颜色的面，并将其放在前面。",
          "找到后，我们只需执行以下算法直到完成：",
          "如果找不到任何内容，我们执行相同的算法，面将完成。"
        ]
      },
      "end" : "结束！"
    }
  }
}
